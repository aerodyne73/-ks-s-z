{"version":3,"file":"ngx-md.component.d.ts","sources":["ngx-md.component.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, AfterViewInit, EventEmitter } from '@angular/core';\nimport { NgxMdService } from './ngx-md.service';\nexport declare class NgxMdComponent implements AfterViewInit {\n    _mdService: NgxMdService;\n    _el: ElementRef;\n    platformId: string;\n    _path: string;\n    _data: string;\n    _md: any;\n    _ext: string;\n    changeLog: string[];\n    error: EventEmitter<any>;\n    loaded: EventEmitter<any>;\n    constructor(_mdService: NgxMdService, _el: ElementRef, platformId: string);\n    path: string;\n    data: string;\n    /**\n     * Boolean indicating if the markdown content should be sanitized to avoid script injections\n     */\n    sanitizeHtml: boolean;\n    onDataChange(data: string): void;\n    /**\n     *  After view init\n     */\n    ngAfterViewInit(): void;\n    processRaw(): void;\n    /**\n     * get remote conent;\n     */\n    onPathChange(): void;\n    /**\n     * catch http error\n     */\n    private handleError;\n    /**\n     * Prepare string\n     */\n    prepare(raw: string): string;\n    /**\n     * Trim left whitespace\n     */\n    private trimLeft;\n    /**\n     * Use Prism to highlight code snippets only on the browser\n     */\n    private highlightContent;\n}\n"]}